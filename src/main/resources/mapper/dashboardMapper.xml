<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssginc.ewms.dashboard.mapper.DashboardMapper">

    <!-- 기간별 입고량 조회 -->
    <select id="selectIncomeListByType" resultType="com.ssginc.ewms.dashboard.dto.IncomeResponseDto">

        SELECT *
        FROM (
                SELECT
                    CASE
                        WHEN #{type} = 'daily' THEN DATE_FORMAT(income_date, '%Y-%m-%d')
                        WHEN #{type} = 'monthly' THEN DATE_FORMAT(income_date, '%Y-%m')
                        WHEN #{type} = 'yearly' THEN DATE_FORMAT(income_date, '%Y')
                    END AS income_date,
                SUM(income_actual_quantity) AS income_quantity
                FROM income
                WHERE income_date IS NOT NULL
                AND income_actual_quantity IS NOT NULL
                GROUP BY
                    CASE
                        WHEN #{type} = 'daily' THEN DATE_FORMAT(income_date, '%Y-%m-%d')
                        WHEN #{type} = 'monthly' THEN DATE_FORMAT(income_date, '%Y-%m')
                        WHEN #{type} = 'yearly' THEN DATE_FORMAT(income_date, '%Y')
                    END
                ORDER BY income_date DESC
                LIMIT 10
        ) AS ordered_result
        ORDER BY income_date ASC

    </select>


    <resultMap id="outgoingResultMap" type="com.ssginc.ewms.dashboard.dto.OutgoingResponseDto">
        <result column="outgoing_date" property="outgoingDate"/>
        <result column="outgoing_quantity" property="outgoingQuantity"/>
    </resultMap>

    <!-- 기간별 출고량 조회 -->
    <select id="selectOutgoingListByType" resultMap="outgoingResultMap">
        SELECT *
        FROM (
                 SELECT
                     CASE
                         WHEN #{type} = 'daily' THEN DATE_FORMAT(outgoing_date, '%Y-%m-%d')
                         WHEN #{type} = 'monthly' THEN DATE_FORMAT(outgoing_date, '%Y-%m')
                         WHEN #{type} = 'yearly' THEN DATE_FORMAT(outgoing_date, '%Y')
                         END AS outgoing_date,
                     SUM(outgoing_quantity) AS outgoing_quantity
                 FROM income
                 WHERE outgoing_date IS NOT NULL
                   AND outgoing_quantity IS NOT NULL
                 GROUP BY
                     CASE
                         WHEN #{type} = 'daily' THEN DATE_FORMAT(outgoing_date, '%Y-%m-%d')
                         WHEN #{type} = 'monthly' THEN DATE_FORMAT(outgoing_date, '%Y-%m')
                         WHEN #{type} = 'yearly' THEN DATE_FORMAT(outgoing_date, '%Y')
                    END
                 ORDER BY outgoing_date DESC
                     LIMIT 10
             ) AS ordered_result
        ORDER BY outgoing_date ASC
    </select>


    <select id="selectTopOutgoingBranchesByDate" resultType="com.ssginc.ewms.dashboard.dto.OutgoingResponseDto">
        SELECT
            b.branch_name AS branch_name,
            SUM(o.outgoing_quantity) AS outgoing_quantity
        FROM
            outgoing o
                INNER JOIN
            branch b ON o.branch_id = b.branch_id
        WHERE
            outgoing_quantity IS NOT NULL
          AND outgoing_date IS NOT NULL
          AND (
            (DATE_FORMAT(outgoing_date, '%Y') = #{year} AND #{month} IS NULL AND #{day} IS NULL)
                OR (DATE_FORMAT(outgoing_date, '%Y-%m') = CONCAT(#{year}, '-', #{month}) AND #{day} IS NULL)
                OR (DATE_FORMAT(outgoing_date, '%Y-%m-%d') = CONCAT(#{year}, '-', #{month}, '-', #{day}))
            )
        GROUP BY
            b.branch_name
        ORDER BY
            b.branch_name
            LIMIT 5;
    </select>


    <select id="selectSectorListByWarehouseId" resultType="com.ssginc.ewms.dashboard.dto.SectorResponseDto">
        SELECT
        s.sector_id,
        s.sector_name,
        s.allow_capacity,
        COALESCE(SUM(i.real_inventory_quantity), 0) AS used_capacity,
        ROUND(COALESCE(SUM(i.real_inventory_quantity), 0) / s.allow_capacity * 100) AS usage_rate_percentage
        FROM
        sector s
        LEFT JOIN
        inventory i ON s.sector_id = i.sector_id
        JOIN
        warehouse w ON s.warehouse_id = w.warehouse_id
        WHERE w.warehouse_id = #{warehouseId}
        GROUP BY
        s.sector_id, s.sector_name, w.warehouse_name, s.allow_capacity
        ORDER BY
        s.sector_id;
    </select>
    <select id="selectTransportationList" resultType="com.ssginc.ewms.dashboard.dto.TransportationResponseDto">
        select t.transportation_id,
               t.outgoing_id,
               t.transportation_start,
               t.transportation_end,
               b.branch_name AS "destination",
               o.outgoing_price AS "price"
        from transportation t
        join outgoing o using (outgoing_id)
        join branch b using (branch_id)
        ORDER BY t.transportation_id desc
        LIMIT 10
    </select>

</mapper>
